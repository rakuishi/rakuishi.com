---
import type { CollectionEntry } from "astro:content";
import DateTime, { DateTimeFormat } from "@/components/DateTime.astro";
import Base from "@/layouts/Base.astro";

export interface Props {
  title: string;
  posts: CollectionEntry<"posts">[];
}

const { title, posts } = Astro.props;

const capitalize = (text: string): string =>
  text.charAt(0).toUpperCase() + text.slice(1).toLowerCase();

const getPostsByYear = (posts: CollectionEntry<"posts">[]) => {
  const group: { [key: number]: CollectionEntry<"posts">[] } = {};
  for (const post of posts) {
    const year = post.data.date.getFullYear();
    if (!group[year]) {
      group[year] = [post];
    } else {
      group[year].push(post);
    }
  }
  return group;
};

const postsByYear = getPostsByYear(posts);
const years = Object.keys(postsByYear).sort((a, b) => {
  return Number.parseInt(b) - Number.parseInt(a);
});
---

<Base title={capitalize(title)}>
  <main class="layout">
    {title && title.length > 0 && <h1 class="layout_title">{title}</h1>}
    {
      years.map(year => (
        <section class="layout_section">
          <h2 class="layout_section_title">{year}</h2>
          <ul class="layout_list">
            {
              postsByYear[year].map(post => (
                <li class="layout_list_item">
                  <a
                    href={`/posts/${post.slug}/`}
                    class="layout_list_item_inner"
                  >
                    <span class="layout_list_item_meta">
                      <DateTime date={post.data.date} format={DateTimeFormat.MMDD} /> 
                    </span>
                    <span class="layout_list_item_title">
                      {post.data.title}
                    </span>
                  </a>
                </li>
              ))
            }
          </ul>
        </section>
      ))
    }
  </main>
</Base>

<style>
  .layout {
    max-width: var(--max-width);
    margin: 0 auto 48px;
    padding: 0 12px;
  }
  .layout_title {
    color: var(--secondary-text-color);
    font-size: 24px;
    margin: 12px 0 12px 12px;
    text-transform: capitalize;
  }
  .layout_section_title {
    color: var(--secondary-text-color);
    font-size: 20px;
    font-family: var(--mono-font-family);
    margin: 24px 0 12px 12px;
    text-transform: capitalize;
  }  
  .layout_list {
    list-style: none;
  }
  .layout_list_item_inner {
    display: flex;
    align-items: center;
    padding: 4px 12px;
    border-radius: 8px;
  }
  .layout_list_item_inner:hover {
    background: var(--secondary-background-color);
  }
  .layout_list_item_meta {
    flex: 0 0 auto;
    margin-right: 12px;
    color: var(--secondary-text-color);
    font-size: 16px;
    font-family: var(--mono-font-family);
    align-self: flex-start;
  }
  .layout_list_item_title {
    flex: 1 1 auto;
    font-size: 16px;
    color: var(--primary-text-color);
  }
  .layout_list_item_category {
    text-transform: capitalize;
  }
</style>
